trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "10.x"
    displayName: "Install Node.js"

  - script: |
      npm install
    displayName: "npm install"

  - task: Bash@3
    inputs:
      targetType: "inline"
      script: |
        tokenJson=$(cat << EOS
        {
          "access_token": $ACCESS_TOKEN,
          "refresh_token": $REFRESH_TOKEN
        }
        EOS
        )
        echo "$tokenJson" > token.json
      workingDirectory: "$(System.DefaultWorkingDirectory)"
    env:
      ACCESS_TOKEN: $(ACCESS_TOKEN)
      REFRESH_TOKEN: $(REFRESH_TOKEN)

  - task: Bash@3
    inputs:
      targetType: "inline"
      script: |
        credential=$(cat << EOS
        {
          "installed": {
            "client_id": $CLIENT_ID,
            "project_id": "quickstart-1550231045469",
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://oauth2.googleapis.com/token",
            "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
            "client_secret": "$CLIENT_SECRET",
            "redirect_uris": ["urn:ietf:wg:oauth:2.0:oob", "http://localhost"]
          }
        }
        EOS
        )
        echo "$credential" > oauthCredential.json
      workingDirectory: "$(System.DefaultWorkingDirectory)"
    env:
      CLIENT_ID: $(CLIENT_ID)
      CLIENT_SECRET: $(CLIENT_SECRET)

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(System.DefaultWorkingDirectory)"
      includeRootFolder: false
      archiveType: "zip"
      archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
      ArtifactName: "drop"
      publishLocation: "Container"
